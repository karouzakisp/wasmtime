;;! target = "aarch64"
;;! test = "compile"
;;! flags = " -C cranelift-enable-heap-access-spectre-mitigation -W memory64 -O static-memory-maximum-size=0 -O static-memory-guard-size=0 -O dynamic-memory-guard-size=0"

;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;; !!! GENERATED BY 'make-load-store-tests.sh' DO NOT EDIT !!!
;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

(module
  (memory i64 1)

  (func (export "do_store") (param i64 i32)
    local.get 0
    local.get 1
    i32.store offset=0xffff0000)

  (func (export "do_load") (param i64) (result i32)
    local.get 0
    i32.load offset=0xffff0000))

;; wasm[0]::function[0]:
;;       stp     x29, x30, [sp, #-0x10]!
;;       mov     x29, sp
;;       mov     x13, #0xffff0000
;;       mov     x12, #0
;;       mov     w14, #-0xfffc
;;       adds    x14, x2, x14
;;       b.hs    #0x44
;;   1c: ldr     x15, [x0, #0x68]
;;       ldr     x0, [x0, #0x60]
;;       add     x0, x0, x2
;;       add     x13, x0, x13
;;       cmp     x14, x15
;;       csel    x14, x12, x13, hi
;;       csdb
;;       str     w3, [x14]
;;       ldp     x29, x30, [sp], #0x10
;;       ret
;;   44: .byte   0x1f, 0xc1, 0x00, 0x00
;;
;; wasm[0]::function[1]:
;;       stp     x29, x30, [sp, #-0x10]!
;;       mov     x29, sp
;;       mov     x13, #0xffff0000
;;       mov     x12, #0
;;       mov     w14, #-0xfffc
;;       adds    x14, x2, x14
;;       b.hs    #0xa4
;;   7c: ldr     x15, [x0, #0x68]
;;       ldr     x0, [x0, #0x60]
;;       add     x0, x0, x2
;;       add     x13, x0, x13
;;       cmp     x14, x15
;;       csel    x14, x12, x13, hi
;;       csdb
;;       ldr     w0, [x14]
;;       ldp     x29, x30, [sp], #0x10
;;       ret
;;   a4: .byte   0x1f, 0xc1, 0x00, 0x00
